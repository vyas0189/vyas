---
import '@/styles/globals.css';
import { Toaster } from '@/components/ui/sonner';

interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang='en'>
	<head>
		<meta charset='utf-8' />
		<meta name='viewport' content='width=device-width' />
		<meta name='description' content={description} />
		<meta name='generator' content={Astro.generator} />

		<!-- Open Graph -->
		<meta property='og:type' content='website' />
		<meta property='og:url' content={Astro.url} />
		<meta property='og:title' content={title} />
		<meta property='og:description' content={description} />
		<meta property='og:image' content='/profile.jpeg' />
		<meta property='og:site_name' content='Vyas Ramankulangara' />

		<!-- Twitter -->
		<meta name='twitter:card' content='summary_large_image' />
		<meta name='twitter:title' content={title} />
		<meta name='twitter:description' content={description} />
		<meta name='twitter:image' content='/profile.jpeg' />

		<!-- Modern Font - Inter -->
		<link rel='preconnect' href='https://fonts.googleapis.com' />
		<link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
		<link
			href='https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap'
			rel='stylesheet'
		/>

		<link rel='icon' type='image/svg+xml' href='/favicon.svg' />
		<title>{title}</title>

		<!-- Dark mode script - runs before page render -->
		<script is:inline>
			const getThemePreference = () => {
				if (
					typeof localStorage !== 'undefined' &&
					localStorage.getItem('theme')
				) {
					return localStorage.getItem('theme');
				}
				return window.matchMedia('(prefers-color-scheme: dark)').matches
					? 'dark'
					: 'light';
			};
			const isDark = getThemePreference() === 'dark';
			document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

			if (typeof localStorage !== 'undefined') {
				const observer = new MutationObserver(() => {
					const isDark = document.documentElement.classList.contains('dark');
					localStorage.setItem('theme', isDark ? 'dark' : 'light');
				});
				observer.observe(document.documentElement, {
					attributes: true,
					attributeFilter: ['class'],
				});
			}
		</script>
	</head>
	<body class='antialiased'>
		<div class='relative flex min-h-screen flex-col'>
			<slot name='header' />
			<main class='flex-1'>
				<slot />
			</main>
			<slot name='footer' />
		</div>
		<Toaster client:load />
	</body>
</html>
